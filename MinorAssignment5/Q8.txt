Explain the below declaration(s).
(1) int process(int (*pf)(int a, int b)) ;
->process is a function that takes a pointer to a function pf as an argument.
The function pf accepts two int parameters (a and b) and returns an int.
process itself returns an int.

(2) int (*fun(int, void (*ptr)()))();
->fun is a function that takes:
=>an int
=>a pointer ptr to a function that returns void and takes no arguments.
fun returns a pointer to a function that returns an int and takes no parameters.

(3) int *(*p)(int (*a)[ ]);
->p is a pointer to a function that takes:
a pointer to an array of int (int (*a)[]).
The function returns a pointer to int.

(4) int (*p)[10];
->p is a pointer to an array of 10 int values.

(5) float *p[20];
->p is an array of 20 pointers to float.

(6) int p(char *a);
->p is a function that takes a char* as an argument and returns an int.

(7) int (*p(char * a))[l0];
->p is a function that takes a char* as an argument and returns a pointer to an array of 10 int values.

(8) int * (*p [10]) (char *a);
->p is an array of 10 pointers to functions. Each function takes a char* as an argument and returns a pointer to int.